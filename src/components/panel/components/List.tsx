import React from 'react';
import { useParams, Redirect, useHistory } from 'react-router-dom';

const List = ({ data, path, emptySearch, dataParser, listClass="search-list_records", buttonParser, count }:any) => {
    const { page } = useParams();
    const history = useHistory();
    
    let pageArray = Array.apply(null, Array(Math.ceil(data.length / count))).map((x, i) => i + 1);
    if (pageArray.length === 0)
        pageArray.push(1);

    if (pageArray.indexOf(parseInt(page)) === -1)
        return <Redirect to="/404"/>;

    let emptySearchFunc = () => (
        <div className="empty_search">
            <div className="empty_search_icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 592.709 592.709" fill="currentColor"><path  d="M21.962,325.377c11.78,27.852,28.635,52.854,50.097,74.316c21.462,21.461,46.465,38.316,74.316,50.096    c28.857,12.205,59.486,18.395,91.035,18.395c31.549,0,62.179-6.188,91.035-18.395c4.835-2.045,9.579-4.252,14.239-6.602    l131.022,131.023c11.607,11.605,27.039,17.998,43.452,17.998s31.845-6.393,43.451-17.998l10.561-10.561    c23.959-23.959,23.959-62.943,0.002-86.902L442.03,347.605c3.979-7.189,7.603-14.598,10.829-22.229    c12.205-28.857,18.395-59.486,18.395-91.035c0-31.549-6.188-62.179-18.395-91.035c-11.779-27.851-28.635-52.854-50.097-74.316    s-46.465-38.317-74.316-50.097C299.59,6.689,268.961,0.5,237.412,0.5s-62.179,6.188-91.035,18.394    c-27.851,11.78-52.854,28.635-74.316,50.097c-21.461,21.462-38.316,46.465-50.096,74.316    C9.759,172.164,3.569,202.793,3.569,234.342C3.569,265.891,9.757,296.52,21.962,325.377z M386.976,353.135    c-10.865,13.66-23.562,25.795-37.719,36.039c-11.984,8.674-25.014,15.986-38.866,21.719c-22.486,9.307-47.13,14.451-72.979,14.451    c-105.488,0-191.003-85.514-191.003-191.002c0-105.488,85.515-191.002,191.003-191.002c105.487,0,191.003,85.515,191.003,191.003    c0,29.135-6.534,56.74-18.2,81.447C403.9,329.16,396.083,341.682,386.976,353.135z M540.88,507.039    c7.268,7.268,7.268,19.051,0,26.318l-10.561,10.561c-3.634,3.633-8.396,5.449-13.159,5.449s-9.525-1.816-13.159-5.449    L379.875,419.791c8.011-6.168,15.655-12.865,22.888-20.098c5.163-5.162,10.052-10.535,14.674-16.098L540.88,507.039z"/><path d="M517.159,592.709c-16.546,0-32.104-6.444-43.806-18.145L342.587,443.797c-4.636,2.328-9.325,4.498-13.947,6.453    c-28.915,12.231-59.609,18.434-91.229,18.434c-31.615,0-62.309-6.202-91.229-18.434c-27.909-11.804-52.966-28.694-74.475-50.203    c-21.509-21.51-38.4-46.566-50.204-74.476C9.271,296.653,3.069,265.959,3.069,234.342c0-31.615,6.202-62.31,18.434-91.23    c11.805-27.91,28.695-52.967,50.203-74.475c21.508-21.508,46.565-38.399,74.475-50.204C175.1,6.202,205.794,0,237.412,0    c31.616,0,62.31,6.202,91.229,18.434c27.91,11.804,52.968,28.695,74.476,50.204c21.509,21.509,38.399,46.566,50.204,74.475    c12.231,28.917,18.434,59.612,18.434,91.23c0,31.615-6.202,62.308-18.434,91.229c-3.125,7.392-6.714,14.772-10.671,21.946    l128.877,128.877c24.152,24.154,24.151,63.456-0.002,87.609l-10.561,10.561C549.263,586.265,533.705,592.709,517.159,592.709z     M342.782,442.578l131.278,131.279c11.514,11.512,26.819,17.852,43.099,17.852s31.585-6.34,43.098-17.852l10.561-10.561    c23.764-23.764,23.765-62.431,0.002-86.195L441.41,347.692l0.183-0.329c4.011-7.246,7.646-14.709,10.806-22.181    c12.18-28.797,18.355-59.36,18.355-90.84c0-31.483-6.176-62.047-18.355-90.84c-11.753-27.79-28.572-52.74-49.989-74.158    c-21.417-21.417-46.367-38.236-74.157-49.99C299.456,7.175,268.894,1,237.412,1c-31.483,0-62.046,6.175-90.84,18.354    c-27.791,11.754-52.741,28.573-74.158,49.99c-21.416,21.417-38.235,46.367-49.989,74.158    c-12.18,28.796-18.355,59.359-18.355,90.84c0,31.482,6.175,62.045,18.354,90.84c11.753,27.789,28.572,52.739,49.99,74.157    c21.418,21.417,46.368,38.235,74.158,49.988c28.796,12.18,59.359,18.355,90.84,18.355c31.486,0,62.049-6.176,90.841-18.355    c4.708-1.991,9.488-4.207,14.208-6.587L342.782,442.578z M517.16,549.867c-5.104,0-9.903-1.987-13.513-5.596L379.119,419.742    l0.451-0.348c8.031-6.184,15.715-12.931,22.839-20.055c5.078-5.077,10.004-10.481,14.643-16.063l0.351-0.422l123.831,123.831    c7.451,7.451,7.451,19.574,0,27.025l-10.561,10.561C527.063,547.88,522.265,549.867,517.16,549.867z M380.631,419.84    l123.724,123.725c3.421,3.42,7.969,5.303,12.806,5.303s9.385-1.883,12.806-5.303l10.561-10.561c7.061-7.061,7.061-18.55,0-25.611    L417.471,384.337c-4.556,5.456-9.383,10.739-14.354,15.71C396.096,407.068,388.533,413.725,380.631,419.84z M237.411,425.844    c-105.595,0-191.503-85.907-191.503-191.502c0-105.595,85.908-191.502,191.503-191.502c105.595,0,191.503,85.908,191.503,191.503    c0,28.542-6.14,56.016-18.248,81.661c-6.281,13.302-14.12,25.899-23.299,37.443c-10.903,13.708-23.627,25.864-37.817,36.133    c-12.096,8.754-25.207,16.081-38.968,21.775C287.353,420.969,262.734,425.844,237.411,425.844z M237.411,43.839    c-105.043,0-190.503,85.459-190.503,190.502c0,105.043,85.459,190.502,190.503,190.502c25.191,0,49.681-4.85,72.788-14.413    c13.689-5.665,26.731-12.953,38.765-21.662c14.116-10.215,26.773-22.308,37.62-35.945c9.132-11.482,16.93-24.015,23.178-37.248    c12.045-25.509,18.152-52.84,18.152-81.233C427.914,129.298,342.455,43.839,237.411,43.839z"/><path d="M317.555,154.573c-8.365-8.365-21.928-8.365-30.292,0l-49.476,49.476l-49.476-49.476c-8.366-8.365-21.928-8.365-30.292,0    c-8.365,8.366-8.365,21.927,0,30.293l49.476,49.475l-49.476,49.476c-8.365,8.365-8.365,21.927,0,30.292    c4.183,4.184,9.664,6.273,15.146,6.273c5.481,0,10.964-2.092,15.146-6.273l49.476-49.475l8.806,8.806l30.292,30.292l10.377,10.377    c4.183,4.182,9.665,6.273,15.146,6.273s10.964-2.092,15.146-6.273c8.365-8.365,8.365-21.927,0-30.292l-10.356-10.357    l-30.293-30.292l-8.826-8.826l49.476-49.475C325.92,176.5,325.92,162.939,317.555,154.573z"/><path d="M302.408,320.883c-5.854,0-11.359-2.28-15.5-6.42l-49.123-49.122l-49.123,49.122c-4.14,4.14-9.645,6.42-15.5,6.42    c-5.856,0-11.361-2.28-15.5-6.42c-4.14-4.141-6.42-9.645-6.42-15.5c0-5.854,2.28-11.359,6.42-15.5l49.122-49.122l-49.122-49.122    c-8.546-8.547-8.546-22.453,0-31c4.14-4.14,9.645-6.42,15.499-6.42c5.855,0,11.36,2.28,15.5,6.42l49.123,49.122l49.123-49.122    c4.14-4.14,9.645-6.42,15.5-6.42c5.855,0,11.36,2.28,15.5,6.42c8.546,8.547,8.546,22.453,0,31l-49.122,49.122l49.122,49.122    c4.141,4.14,6.42,9.645,6.42,15.5c0,5.855-2.279,11.359-6.42,15.5C313.768,318.603,308.263,320.883,302.408,320.883z     M237.786,263.927l49.83,49.829c3.952,3.951,9.206,6.127,14.792,6.127c5.588,0,10.841-2.176,14.793-6.127    c3.951-3.951,6.127-9.205,6.127-14.793c0-5.587-2.176-10.841-6.127-14.792l-49.829-49.829l49.829-49.829    c8.156-8.157,8.156-21.429,0-29.586c-3.951-3.951-9.205-6.127-14.793-6.127s-10.841,2.176-14.792,6.127l-49.83,49.829    l-49.83-49.829c-3.952-3.951-9.206-6.127-14.793-6.127c-5.587,0-10.841,2.176-14.792,6.127c-8.156,8.157-8.156,21.429,0,29.586    l49.829,49.829l-49.829,49.829c-3.951,3.951-6.127,9.205-6.127,14.792c0,5.588,2.176,10.842,6.127,14.793    c3.95,3.951,9.204,6.127,14.792,6.127c5.588,0,10.841-2.176,14.793-6.127L237.786,263.927z"/></svg>
            </div> 
            <div className="empty_search_message">{emptySearch}</div>
        </div>
    )

    let defaultButtonParser = (p:any, path:any, isCurrentPage:any, history:any, currentPage:any) => 
            ((p > parseInt(currentPage) - 4) && (p < parseInt(currentPage) + 4)) ? (
                <div key={p} 
                        onClick={() => history.push(`/panel/${path}/page/${p}`)}
                        className={`search-list_button${ isCurrentPage ? ' active' : ''}`}>
                    {p}
                </div>
            ) : null

    return (
        <div className="search-list">
            
            <div className={listClass}>
                { data.length === 0 && emptySearchFunc() }

                { data.slice((parseInt(page) - 1) * count, parseInt(page) * count).map(dataParser) }
            </div>

            { data.length !== 0 && <div className="search-list_buttons">
                    { parseInt(page) >= 5 && 
                        <button className="search-list_button_first" 
                            onClick={() => history.push(`/panel/${path}/page/1`)}>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"/></svg>
                        </button> }
                    <button className="search-list_button_back" 
                            disabled={(page === "1")} 
                            onClick={() => history.push(`/panel/${path}/page/${parseInt(page) - 1}`)}>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><path fill="currentColor" d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"/></svg>
                    </button>

                    { pageArray.map((p:any) => (buttonParser || defaultButtonParser)(p, path, (p.toString() === page), history, page, pageArray)) }

                    <button className="search-list_button_forward" 
                            disabled={(page === pageArray.length.toString())} 
                            onClick={() => history.push(`/panel/${path}/page/${parseInt(page) + 1}`)}>
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 512"><path fill="currentColor" d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"/></svg>
                    </button>

                    { parseInt(page) <= pageArray.length - 4 && 
                        <button className="search-list_button_last" 
                            onClick={() => history.push(`/panel/${path}/page/${pageArray.length}`)}>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"/></svg>
                        </button> }
                </div> }

        </div>
    );
}

export default List;